using ComparatorNetworks: top_down_bitsort, bottom_up_bitsort, riffle_bitsort
using SIMD: Vec
using Test: @testset, @test


@testset "bitsort" begin

    ALL_BIT_STRINGS_3 = (0x0F, 0x33, 0x55)

    SORTED_BIT_STRINGS_3 = (0x01, 0x17, 0x7F)

    ALL_BIT_STRINGS_4 = (0x00FF, 0x0F0F, 0x3333, 0x5555)

    SORTED_BIT_STRINGS_4 = (0x0001, 0x0117, 0x177F, 0x7FFF)

    ALL_BIT_STRINGS_5 =
        (0x0000FFFF, 0x00FF00FF, 0x0F0F0F0F, 0x33333333, 0x55555555)

    SORTED_BIT_STRINGS_5 =
        (0x00000001, 0x00010117, 0x0117177F, 0x177F7FFF, 0x7FFFFFFF)

    ALL_BIT_STRINGS_6 = (
        0x00000000FFFFFFFF, 0x0000FFFF0000FFFF, 0x00FF00FF00FF00FF,
        0x0F0F0F0F0F0F0F0F, 0x3333333333333333, 0x5555555555555555)

    SORTED_BIT_STRINGS_6 = (
        0x0000000000000001, 0x0000000100010117, 0x000101170117177F,
        0x0117177F177F7FFF, 0x177F7FFF7FFFFFFF, 0x7FFFFFFFFFFFFFFF)

    ALL_BIT_STRINGS_7 = (
        Vec{2,UInt64}((0x0000000000000000, 0xFFFFFFFFFFFFFFFF)),
        Vec{2,UInt64}((0x00000000FFFFFFFF, 0x00000000FFFFFFFF)),
        Vec{2,UInt64}((0x0000FFFF0000FFFF, 0x0000FFFF0000FFFF)),
        Vec{2,UInt64}((0x00FF00FF00FF00FF, 0x00FF00FF00FF00FF)),
        Vec{2,UInt64}((0x0F0F0F0F0F0F0F0F, 0x0F0F0F0F0F0F0F0F)),
        Vec{2,UInt64}((0x3333333333333333, 0x3333333333333333)),
        Vec{2,UInt64}((0x5555555555555555, 0x5555555555555555)))

    SORTED_BIT_STRINGS_7 = (
        Vec{2,UInt64}((0x0000000000000000, 0x0000000000000001)),
        Vec{2,UInt64}((0x0000000000000001, 0x0000000100010117)),
        Vec{2,UInt64}((0x0000000100010117, 0x000101170117177F)),
        Vec{2,UInt64}((0x000101170117177F, 0x0117177F177F7FFF)),
        Vec{2,UInt64}((0x0117177F177F7FFF, 0x177F7FFF7FFFFFFF)),
        Vec{2,UInt64}((0x177F7FFF7FFFFFFF, 0x7FFFFFFFFFFFFFFF)),
        Vec{2,UInt64}((0x7FFFFFFFFFFFFFFF, 0xFFFFFFFFFFFFFFFF)))

    ALL_BIT_STRINGS_8 = (
        Vec{4,UInt64}((
            0x0000000000000000, 0x0000000000000000,
            0xFFFFFFFFFFFFFFFF, 0xFFFFFFFFFFFFFFFF)),
        Vec{4,UInt64}((
            0x0000000000000000, 0xFFFFFFFFFFFFFFFF,
            0x0000000000000000, 0xFFFFFFFFFFFFFFFF)),
        Vec{4,UInt64}((
            0x00000000FFFFFFFF, 0x00000000FFFFFFFF,
            0x00000000FFFFFFFF, 0x00000000FFFFFFFF)),
        Vec{4,UInt64}((
            0x0000FFFF0000FFFF, 0x0000FFFF0000FFFF,
            0x0000FFFF0000FFFF, 0x0000FFFF0000FFFF)),
        Vec{4,UInt64}((
            0x00FF00FF00FF00FF, 0x00FF00FF00FF00FF,
            0x00FF00FF00FF00FF, 0x00FF00FF00FF00FF)),
        Vec{4,UInt64}((
            0x0F0F0F0F0F0F0F0F, 0x0F0F0F0F0F0F0F0F,
            0x0F0F0F0F0F0F0F0F, 0x0F0F0F0F0F0F0F0F)),
        Vec{4,UInt64}((
            0x3333333333333333, 0x3333333333333333,
            0x3333333333333333, 0x3333333333333333)),
        Vec{4,UInt64}((
            0x5555555555555555, 0x5555555555555555,
            0x5555555555555555, 0x5555555555555555)))

    SORTED_BIT_STRINGS_8 = (
        Vec{4,UInt64}((
            0x0000000000000000, 0x0000000000000000,
            0x0000000000000000, 0x0000000000000001)),
        Vec{4,UInt64}((
            0x0000000000000000, 0x0000000000000001,
            0x0000000000000001, 0x0000000100010117)),
        Vec{4,UInt64}((
            0x0000000000000001, 0x0000000100010117,
            0x0000000100010117, 0x000101170117177F)),
        Vec{4,UInt64}((
            0x0000000100010117, 0x000101170117177F,
            0x000101170117177F, 0x0117177F177F7FFF)),
        Vec{4,UInt64}((
            0x000101170117177F, 0x0117177F177F7FFF,
            0x0117177F177F7FFF, 0x177F7FFF7FFFFFFF)),
        Vec{4,UInt64}((
            0x0117177F177F7FFF, 0x177F7FFF7FFFFFFF,
            0x177F7FFF7FFFFFFF, 0x7FFFFFFFFFFFFFFF)),
        Vec{4,UInt64}((
            0x177F7FFF7FFFFFFF, 0x7FFFFFFFFFFFFFFF,
            0x7FFFFFFFFFFFFFFF, 0xFFFFFFFFFFFFFFFF)),
        Vec{4,UInt64}((
            0x7FFFFFFFFFFFFFFF, 0xFFFFFFFFFFFFFFFF,
            0xFFFFFFFFFFFFFFFF, 0xFFFFFFFFFFFFFFFF)))

    ALL_BIT_STRINGS_9 = (
        Vec{8,UInt64}((
            0x0000000000000000, 0x0000000000000000,
            0x0000000000000000, 0x0000000000000000,
            0xFFFFFFFFFFFFFFFF, 0xFFFFFFFFFFFFFFFF,
            0xFFFFFFFFFFFFFFFF, 0xFFFFFFFFFFFFFFFF)),
        Vec{8,UInt64}((
            0x0000000000000000, 0x0000000000000000,
            0xFFFFFFFFFFFFFFFF, 0xFFFFFFFFFFFFFFFF,
            0x0000000000000000, 0x0000000000000000,
            0xFFFFFFFFFFFFFFFF, 0xFFFFFFFFFFFFFFFF)),
        Vec{8,UInt64}((
            0x0000000000000000, 0xFFFFFFFFFFFFFFFF,
            0x0000000000000000, 0xFFFFFFFFFFFFFFFF,
            0x0000000000000000, 0xFFFFFFFFFFFFFFFF,
            0x0000000000000000, 0xFFFFFFFFFFFFFFFF)),
        Vec{8,UInt64}((
            0x00000000FFFFFFFF, 0x00000000FFFFFFFF,
            0x00000000FFFFFFFF, 0x00000000FFFFFFFF,
            0x00000000FFFFFFFF, 0x00000000FFFFFFFF,
            0x00000000FFFFFFFF, 0x00000000FFFFFFFF)),
        Vec{8,UInt64}((
            0x0000FFFF0000FFFF, 0x0000FFFF0000FFFF,
            0x0000FFFF0000FFFF, 0x0000FFFF0000FFFF,
            0x0000FFFF0000FFFF, 0x0000FFFF0000FFFF,
            0x0000FFFF0000FFFF, 0x0000FFFF0000FFFF)),
        Vec{8,UInt64}((
            0x00FF00FF00FF00FF, 0x00FF00FF00FF00FF,
            0x00FF00FF00FF00FF, 0x00FF00FF00FF00FF,
            0x00FF00FF00FF00FF, 0x00FF00FF00FF00FF,
            0x00FF00FF00FF00FF, 0x00FF00FF00FF00FF)),
        Vec{8,UInt64}((
            0x0F0F0F0F0F0F0F0F, 0x0F0F0F0F0F0F0F0F,
            0x0F0F0F0F0F0F0F0F, 0x0F0F0F0F0F0F0F0F,
            0x0F0F0F0F0F0F0F0F, 0x0F0F0F0F0F0F0F0F,
            0x0F0F0F0F0F0F0F0F, 0x0F0F0F0F0F0F0F0F)),
        Vec{8,UInt64}((
            0x3333333333333333, 0x3333333333333333,
            0x3333333333333333, 0x3333333333333333,
            0x3333333333333333, 0x3333333333333333,
            0x3333333333333333, 0x3333333333333333)),
        Vec{8,UInt64}((
            0x5555555555555555, 0x5555555555555555,
            0x5555555555555555, 0x5555555555555555,
            0x5555555555555555, 0x5555555555555555,
            0x5555555555555555, 0x5555555555555555)))

    SORTED_BIT_STRINGS_9 = (
        Vec{8,UInt64}((
            0x0000000000000000, 0x0000000000000000,
            0x0000000000000000, 0x0000000000000000,
            0x0000000000000000, 0x0000000000000000,
            0x0000000000000000, 0x0000000000000001)),
        Vec{8,UInt64}((
            0x0000000000000000, 0x0000000000000000,
            0x0000000000000000, 0x0000000000000001,
            0x0000000000000000, 0x0000000000000001,
            0x0000000000000001, 0x0000000100010117)),
        Vec{8,UInt64}((
            0x0000000000000000, 0x0000000000000001,
            0x0000000000000001, 0x0000000100010117,
            0x0000000000000001, 0x0000000100010117,
            0x0000000100010117, 0x000101170117177F)),
        Vec{8,UInt64}((
            0x0000000000000001, 0x0000000100010117,
            0x0000000100010117, 0x000101170117177F,
            0x0000000100010117, 0x000101170117177F,
            0x000101170117177F, 0x0117177F177F7FFF)),
        Vec{8,UInt64}((
            0x0000000100010117, 0x000101170117177F,
            0x000101170117177F, 0x0117177F177F7FFF,
            0x000101170117177F, 0x0117177F177F7FFF,
            0x0117177F177F7FFF, 0x177F7FFF7FFFFFFF)),
        Vec{8,UInt64}((
            0x000101170117177F, 0x0117177F177F7FFF,
            0x0117177F177F7FFF, 0x177F7FFF7FFFFFFF,
            0x0117177F177F7FFF, 0x177F7FFF7FFFFFFF,
            0x177F7FFF7FFFFFFF, 0x7FFFFFFFFFFFFFFF)),
        Vec{8,UInt64}((
            0x0117177F177F7FFF, 0x177F7FFF7FFFFFFF,
            0x177F7FFF7FFFFFFF, 0x7FFFFFFFFFFFFFFF,
            0x177F7FFF7FFFFFFF, 0x7FFFFFFFFFFFFFFF,
            0x7FFFFFFFFFFFFFFF, 0xFFFFFFFFFFFFFFFF)),
        Vec{8,UInt64}((
            0x177F7FFF7FFFFFFF, 0x7FFFFFFFFFFFFFFF,
            0x7FFFFFFFFFFFFFFF, 0xFFFFFFFFFFFFFFFF,
            0x7FFFFFFFFFFFFFFF, 0xFFFFFFFFFFFFFFFF,
            0xFFFFFFFFFFFFFFFF, 0xFFFFFFFFFFFFFFFF)),
        Vec{8,UInt64}((
            0x7FFFFFFFFFFFFFFF, 0xFFFFFFFFFFFFFFFF,
            0xFFFFFFFFFFFFFFFF, 0xFFFFFFFFFFFFFFFF,
            0xFFFFFFFFFFFFFFFF, 0xFFFFFFFFFFFFFFFF,
            0xFFFFFFFFFFFFFFFF, 0xFFFFFFFFFFFFFFFF)))

    ALL_BIT_STRINGS_10 = (
        Vec{16,UInt64}((
            0x0000000000000000, 0x0000000000000000,
            0x0000000000000000, 0x0000000000000000,
            0x0000000000000000, 0x0000000000000000,
            0x0000000000000000, 0x0000000000000000,
            0xFFFFFFFFFFFFFFFF, 0xFFFFFFFFFFFFFFFF,
            0xFFFFFFFFFFFFFFFF, 0xFFFFFFFFFFFFFFFF,
            0xFFFFFFFFFFFFFFFF, 0xFFFFFFFFFFFFFFFF,
            0xFFFFFFFFFFFFFFFF, 0xFFFFFFFFFFFFFFFF)),
        Vec{16,UInt64}((
            0x0000000000000000, 0x0000000000000000,
            0x0000000000000000, 0x0000000000000000,
            0xFFFFFFFFFFFFFFFF, 0xFFFFFFFFFFFFFFFF,
            0xFFFFFFFFFFFFFFFF, 0xFFFFFFFFFFFFFFFF,
            0x0000000000000000, 0x0000000000000000,
            0x0000000000000000, 0x0000000000000000,
            0xFFFFFFFFFFFFFFFF, 0xFFFFFFFFFFFFFFFF,
            0xFFFFFFFFFFFFFFFF, 0xFFFFFFFFFFFFFFFF)),
        Vec{16,UInt64}((
            0x0000000000000000, 0x0000000000000000,
            0xFFFFFFFFFFFFFFFF, 0xFFFFFFFFFFFFFFFF,
            0x0000000000000000, 0x0000000000000000,
            0xFFFFFFFFFFFFFFFF, 0xFFFFFFFFFFFFFFFF,
            0x0000000000000000, 0x0000000000000000,
            0xFFFFFFFFFFFFFFFF, 0xFFFFFFFFFFFFFFFF,
            0x0000000000000000, 0x0000000000000000,
            0xFFFFFFFFFFFFFFFF, 0xFFFFFFFFFFFFFFFF)),
        Vec{16,UInt64}((
            0x0000000000000000, 0xFFFFFFFFFFFFFFFF,
            0x0000000000000000, 0xFFFFFFFFFFFFFFFF,
            0x0000000000000000, 0xFFFFFFFFFFFFFFFF,
            0x0000000000000000, 0xFFFFFFFFFFFFFFFF,
            0x0000000000000000, 0xFFFFFFFFFFFFFFFF,
            0x0000000000000000, 0xFFFFFFFFFFFFFFFF,
            0x0000000000000000, 0xFFFFFFFFFFFFFFFF,
            0x0000000000000000, 0xFFFFFFFFFFFFFFFF)),
        Vec{16,UInt64}((
            0x00000000FFFFFFFF, 0x00000000FFFFFFFF,
            0x00000000FFFFFFFF, 0x00000000FFFFFFFF,
            0x00000000FFFFFFFF, 0x00000000FFFFFFFF,
            0x00000000FFFFFFFF, 0x00000000FFFFFFFF,
            0x00000000FFFFFFFF, 0x00000000FFFFFFFF,
            0x00000000FFFFFFFF, 0x00000000FFFFFFFF,
            0x00000000FFFFFFFF, 0x00000000FFFFFFFF,
            0x00000000FFFFFFFF, 0x00000000FFFFFFFF)),
        Vec{16,UInt64}((
            0x0000FFFF0000FFFF, 0x0000FFFF0000FFFF,
            0x0000FFFF0000FFFF, 0x0000FFFF0000FFFF,
            0x0000FFFF0000FFFF, 0x0000FFFF0000FFFF,
            0x0000FFFF0000FFFF, 0x0000FFFF0000FFFF,
            0x0000FFFF0000FFFF, 0x0000FFFF0000FFFF,
            0x0000FFFF0000FFFF, 0x0000FFFF0000FFFF,
            0x0000FFFF0000FFFF, 0x0000FFFF0000FFFF,
            0x0000FFFF0000FFFF, 0x0000FFFF0000FFFF)),
        Vec{16,UInt64}((
            0x00FF00FF00FF00FF, 0x00FF00FF00FF00FF,
            0x00FF00FF00FF00FF, 0x00FF00FF00FF00FF,
            0x00FF00FF00FF00FF, 0x00FF00FF00FF00FF,
            0x00FF00FF00FF00FF, 0x00FF00FF00FF00FF,
            0x00FF00FF00FF00FF, 0x00FF00FF00FF00FF,
            0x00FF00FF00FF00FF, 0x00FF00FF00FF00FF,
            0x00FF00FF00FF00FF, 0x00FF00FF00FF00FF,
            0x00FF00FF00FF00FF, 0x00FF00FF00FF00FF)),
        Vec{16,UInt64}((
            0x0F0F0F0F0F0F0F0F, 0x0F0F0F0F0F0F0F0F,
            0x0F0F0F0F0F0F0F0F, 0x0F0F0F0F0F0F0F0F,
            0x0F0F0F0F0F0F0F0F, 0x0F0F0F0F0F0F0F0F,
            0x0F0F0F0F0F0F0F0F, 0x0F0F0F0F0F0F0F0F,
            0x0F0F0F0F0F0F0F0F, 0x0F0F0F0F0F0F0F0F,
            0x0F0F0F0F0F0F0F0F, 0x0F0F0F0F0F0F0F0F,
            0x0F0F0F0F0F0F0F0F, 0x0F0F0F0F0F0F0F0F,
            0x0F0F0F0F0F0F0F0F, 0x0F0F0F0F0F0F0F0F)),
        Vec{16,UInt64}((
            0x3333333333333333, 0x3333333333333333,
            0x3333333333333333, 0x3333333333333333,
            0x3333333333333333, 0x3333333333333333,
            0x3333333333333333, 0x3333333333333333,
            0x3333333333333333, 0x3333333333333333,
            0x3333333333333333, 0x3333333333333333,
            0x3333333333333333, 0x3333333333333333,
            0x3333333333333333, 0x3333333333333333)),
        Vec{16,UInt64}((
            0x5555555555555555, 0x5555555555555555,
            0x5555555555555555, 0x5555555555555555,
            0x5555555555555555, 0x5555555555555555,
            0x5555555555555555, 0x5555555555555555,
            0x5555555555555555, 0x5555555555555555,
            0x5555555555555555, 0x5555555555555555,
            0x5555555555555555, 0x5555555555555555,
            0x5555555555555555, 0x5555555555555555)))

    SORTED_BIT_STRINGS_10 = (
        Vec{16,UInt64}((
            0x0000000000000000, 0x0000000000000000,
            0x0000000000000000, 0x0000000000000000,
            0x0000000000000000, 0x0000000000000000,
            0x0000000000000000, 0x0000000000000000,
            0x0000000000000000, 0x0000000000000000,
            0x0000000000000000, 0x0000000000000000,
            0x0000000000000000, 0x0000000000000000,
            0x0000000000000000, 0x0000000000000001)),
        Vec{16,UInt64}((
            0x0000000000000000, 0x0000000000000000,
            0x0000000000000000, 0x0000000000000000,
            0x0000000000000000, 0x0000000000000000,
            0x0000000000000000, 0x0000000000000001,
            0x0000000000000000, 0x0000000000000000,
            0x0000000000000000, 0x0000000000000001,
            0x0000000000000000, 0x0000000000000001,
            0x0000000000000001, 0x0000000100010117)),
        Vec{16,UInt64}((
            0x0000000000000000, 0x0000000000000000,
            0x0000000000000000, 0x0000000000000001,
            0x0000000000000000, 0x0000000000000001,
            0x0000000000000001, 0x0000000100010117,
            0x0000000000000000, 0x0000000000000001,
            0x0000000000000001, 0x0000000100010117,
            0x0000000000000001, 0x0000000100010117,
            0x0000000100010117, 0x000101170117177F)),
        Vec{16,UInt64}((
            0x0000000000000000, 0x0000000000000001,
            0x0000000000000001, 0x0000000100010117,
            0x0000000000000001, 0x0000000100010117,
            0x0000000100010117, 0x000101170117177F,
            0x0000000000000001, 0x0000000100010117,
            0x0000000100010117, 0x000101170117177F,
            0x0000000100010117, 0x000101170117177F,
            0x000101170117177F, 0x0117177F177F7FFF)),
        Vec{16,UInt64}((
            0x0000000000000001, 0x0000000100010117,
            0x0000000100010117, 0x000101170117177F,
            0x0000000100010117, 0x000101170117177F,
            0x000101170117177F, 0x0117177F177F7FFF,
            0x0000000100010117, 0x000101170117177F,
            0x000101170117177F, 0x0117177F177F7FFF,
            0x000101170117177F, 0x0117177F177F7FFF,
            0x0117177F177F7FFF, 0x177F7FFF7FFFFFFF)),
        Vec{16,UInt64}((
            0x0000000100010117, 0x000101170117177F,
            0x000101170117177F, 0x0117177F177F7FFF,
            0x000101170117177F, 0x0117177F177F7FFF,
            0x0117177F177F7FFF, 0x177F7FFF7FFFFFFF,
            0x000101170117177F, 0x0117177F177F7FFF,
            0x0117177F177F7FFF, 0x177F7FFF7FFFFFFF,
            0x0117177F177F7FFF, 0x177F7FFF7FFFFFFF,
            0x177F7FFF7FFFFFFF, 0x7FFFFFFFFFFFFFFF)),
        Vec{16,UInt64}((
            0x000101170117177F, 0x0117177F177F7FFF,
            0x0117177F177F7FFF, 0x177F7FFF7FFFFFFF,
            0x0117177F177F7FFF, 0x177F7FFF7FFFFFFF,
            0x177F7FFF7FFFFFFF, 0x7FFFFFFFFFFFFFFF,
            0x0117177F177F7FFF, 0x177F7FFF7FFFFFFF,
            0x177F7FFF7FFFFFFF, 0x7FFFFFFFFFFFFFFF,
            0x177F7FFF7FFFFFFF, 0x7FFFFFFFFFFFFFFF,
            0x7FFFFFFFFFFFFFFF, 0xFFFFFFFFFFFFFFFF)),
        Vec{16,UInt64}((
            0x0117177F177F7FFF, 0x177F7FFF7FFFFFFF,
            0x177F7FFF7FFFFFFF, 0x7FFFFFFFFFFFFFFF,
            0x177F7FFF7FFFFFFF, 0x7FFFFFFFFFFFFFFF,
            0x7FFFFFFFFFFFFFFF, 0xFFFFFFFFFFFFFFFF,
            0x177F7FFF7FFFFFFF, 0x7FFFFFFFFFFFFFFF,
            0x7FFFFFFFFFFFFFFF, 0xFFFFFFFFFFFFFFFF,
            0x7FFFFFFFFFFFFFFF, 0xFFFFFFFFFFFFFFFF,
            0xFFFFFFFFFFFFFFFF, 0xFFFFFFFFFFFFFFFF)),
        Vec{16,UInt64}((
            0x177F7FFF7FFFFFFF, 0x7FFFFFFFFFFFFFFF,
            0x7FFFFFFFFFFFFFFF, 0xFFFFFFFFFFFFFFFF,
            0x7FFFFFFFFFFFFFFF, 0xFFFFFFFFFFFFFFFF,
            0xFFFFFFFFFFFFFFFF, 0xFFFFFFFFFFFFFFFF,
            0x7FFFFFFFFFFFFFFF, 0xFFFFFFFFFFFFFFFF,
            0xFFFFFFFFFFFFFFFF, 0xFFFFFFFFFFFFFFFF,
            0xFFFFFFFFFFFFFFFF, 0xFFFFFFFFFFFFFFFF,
            0xFFFFFFFFFFFFFFFF, 0xFFFFFFFFFFFFFFFF)),
        Vec{16,UInt64}((
            0x7FFFFFFFFFFFFFFF, 0xFFFFFFFFFFFFFFFF,
            0xFFFFFFFFFFFFFFFF, 0xFFFFFFFFFFFFFFFF,
            0xFFFFFFFFFFFFFFFF, 0xFFFFFFFFFFFFFFFF,
            0xFFFFFFFFFFFFFFFF, 0xFFFFFFFFFFFFFFFF,
            0xFFFFFFFFFFFFFFFF, 0xFFFFFFFFFFFFFFFF,
            0xFFFFFFFFFFFFFFFF, 0xFFFFFFFFFFFFFFFF,
            0xFFFFFFFFFFFFFFFF, 0xFFFFFFFFFFFFFFFF,
            0xFFFFFFFFFFFFFFFF, 0xFFFFFFFFFFFFFFFF)))

    @test top_down_bitsort(ALL_BIT_STRINGS_3) === SORTED_BIT_STRINGS_3
    @test top_down_bitsort(ALL_BIT_STRINGS_4) === SORTED_BIT_STRINGS_4
    @test top_down_bitsort(ALL_BIT_STRINGS_5) === SORTED_BIT_STRINGS_5
    @test top_down_bitsort(ALL_BIT_STRINGS_6) === SORTED_BIT_STRINGS_6
    @test top_down_bitsort(ALL_BIT_STRINGS_7) === SORTED_BIT_STRINGS_7
    @test top_down_bitsort(ALL_BIT_STRINGS_8) === SORTED_BIT_STRINGS_8
    @test top_down_bitsort(ALL_BIT_STRINGS_9) === SORTED_BIT_STRINGS_9
    @test top_down_bitsort(ALL_BIT_STRINGS_10) === SORTED_BIT_STRINGS_10

    @test bottom_up_bitsort(ALL_BIT_STRINGS_3) === SORTED_BIT_STRINGS_3
    @test bottom_up_bitsort(ALL_BIT_STRINGS_4) === SORTED_BIT_STRINGS_4
    @test bottom_up_bitsort(ALL_BIT_STRINGS_5) === SORTED_BIT_STRINGS_5
    @test bottom_up_bitsort(ALL_BIT_STRINGS_6) === SORTED_BIT_STRINGS_6
    @test bottom_up_bitsort(ALL_BIT_STRINGS_7) === SORTED_BIT_STRINGS_7
    @test bottom_up_bitsort(ALL_BIT_STRINGS_8) === SORTED_BIT_STRINGS_8
    @test bottom_up_bitsort(ALL_BIT_STRINGS_9) === SORTED_BIT_STRINGS_9
    @test bottom_up_bitsort(ALL_BIT_STRINGS_10) === SORTED_BIT_STRINGS_10

    @test riffle_bitsort(ALL_BIT_STRINGS_3) === SORTED_BIT_STRINGS_3
    @test riffle_bitsort(ALL_BIT_STRINGS_4) === SORTED_BIT_STRINGS_4
    @test riffle_bitsort(ALL_BIT_STRINGS_5) === SORTED_BIT_STRINGS_5
    @test riffle_bitsort(ALL_BIT_STRINGS_6) === SORTED_BIT_STRINGS_6
    @test riffle_bitsort(ALL_BIT_STRINGS_7) === SORTED_BIT_STRINGS_7
    @test riffle_bitsort(ALL_BIT_STRINGS_8) === SORTED_BIT_STRINGS_8
    @test riffle_bitsort(ALL_BIT_STRINGS_9) === SORTED_BIT_STRINGS_9
    @test riffle_bitsort(ALL_BIT_STRINGS_10) === SORTED_BIT_STRINGS_10

end
